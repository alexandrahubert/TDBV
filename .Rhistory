install.packages("tidyverse")
install.packages("sf")
install.packages("rgdal")
install.packages("mapview")
install.packages("dbplyr")
odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=D:/SampleDB1/sampleDB1.mdb")
install.packages("RODBC")
odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=D:/SampleDB1/sampleDB1.mdb")
RODBC::odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=D:/SampleDB1/sampleDB1.mdb")
RODBC::odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=../raw_data/Tête_BV.mdb")
RODBC::odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=../raw_data/Tête_BV.accdb")
access_query_32 <- function(db_table = "qryData_RM", table_out = "data_access") {
library(svSocket)
# variables to make values uniform
sock_port <- 8642L
sock_con <- "sv_con"
ODBC_con <- "a32_con"
db_path <- "../raw_data/Tête_BV.accdb"
if (file.exists(db_path)) {
# build ODBC string
ODBC_str <- local({
s <- list()
s$path <- paste0("DBQ=", gsub("(/|\\\\)+", "/", path.expand(db_path)))
s$driver <- "Driver={Microsoft Access Driver (*.mdb, *.accdb)}"
s$threads <- "Threads=4"
s$buffer <- "MaxBufferSize=4096"
s$timeout <- "PageTimeout=5"
paste(s, collapse=";")
})
# start socket server to transfer data to 32 bit session
startSocketServer(port=sock_port, server.name="access_query_32", local=TRUE)
# build expression to pass to 32 bit R session
expr <- "library(svSocket)"
expr <- c(expr, "library(RODBC)")
expr <- c(expr, sprintf("%s <- odbcDriverConnect('%s')", ODBC_con, ODBC_str))
expr <- c(expr, sprintf("if('%1$s' %%in%% sqlTables(%2$s)$TABLE_NAME) {%1$s <- sqlFetch(%2$s, '%1$s')} else {%1$s <- 'table %1$s not found'}", db_table, ODBC_con))
expr <- c(expr, sprintf("%s <- socketConnection(port=%i)", sock_con, sock_port))
expr <- c(expr, sprintf("evalServer(%s, %s, %s)", sock_con, table_out, db_table))
expr <- c(expr, "odbcCloseAll()")
expr <- c(expr, sprintf("close(%s)", sock_con))
expr <- paste(expr, collapse=";")
# launch 32 bit R session and run expressions
prog <- file.path(R.home(), "bin", "i386", "Rscript.exe")
system2(prog, args=c("-e", shQuote(expr)), stdout=NULL, wait=TRUE, invisible=TRUE)
# stop socket server
stopSocketServer(port=sock_port)
# display table fields
message("retrieved: ", table_out, " - ", paste(colnames(get(table_out)), collapse=", "))
} else {
warning("database not found: ", db_path)
}
}
install.packages("svSocket")
channel <- odbcConnect("TBV")
RODBC::channel <- odbcConnect("TBV")
channel <- RODBC::odbcConnect("TBV")
channel
Table1Dat <- sqlFetch(channel, "creationtable")
library(RODBC)
library(RODBC)
Table1Dat <- sqlFetch(channel, "creationtable")
?odbcConnect
odbcConnectAccess(access.file = "../raw_data/Tête_BV.accdb")
odbcConnectAccess(access.file = "TBV")
odbcConnectAccess2007(access.file = "TBV")
odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
channel2 <- odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
Table1Dat <- sqlFetch(channel2, "creationtable")
rm(list=ls())
channel <- odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
channel
#
station <- sqlFetch(channel, "Station")
View(station)
tdbv_stations_aval_l93_20200612 <- sqlFetch(channel, "TDBV_stations_aval_L93_20200612")
station <- sqlFetch(channel, "Station")
caractere_bv <- sqlFetch(channel, "caractere_BV")
facies <- sqlFetch(channel, "Facies")
mesures_wolman <- sqlFetch(channel, "Mesures_Wolman")
pente <- sqlFetch(channel, "Pente")
prof_chute <- sqlFetch(channel, "Prof_chute")
rugosite <- sqlFetch(channel, "Rugosite")
tdbv_stations_aval_l93_20200612 <- sqlFetch(channel, "TDBV_stations_aval_L93_20200612")
#créer jointures
data <- station %>%
left_join(rugosite)
# chargement des packages
library(tidyverse)
#créer jointures
data <- station %>%
left_join(rugosite)
?left_join
#créer jointures
data <- station %>%
select(Ref_sta, comm, topo, lieu_dit) %>%
left_join(y = rugosite %>%
select(Ref_sta, Coeff_K))
View(prof_chute)
View(facies)
left_join(y = mesures_wolman %>%
select(Ref_sta, D16, D50, D84))
data <- station %>%
left_join(y = mesures_wolman %>%
select(Ref_sta, D16, D50, D84))
left_join(y = mesures_wolman %>%
select(Ref_sta, D16, D50, D84))
#créer jointures
data <- station %>%
select(Ref_sta, comm, topo, lieu_dit) %>%
left_join((y = rugosite %>%
select(Ref_sta, Coeff_K)
y = mesures_wolman %>%
select(Ref_sta, D16, D50, D84)))
#créer jointures
data <- station %>%
select(Ref_sta, comm, topo, lieu_dit) %>%
left_join(y = rugosite %>%
select(Ref_sta, Coeff_K)) %>%
left_join(y = mesures_wolman %>%
select(Ref_sta, D16, D50, D84))
#créer jointures
data <- station %>%
select(Ref_sta, comm, topo, lieu_dit) %>%
left_join(y = rugosite %>%
select(Ref_sta, Coeff_K)) %>%
left_join(y = mesures_wolman %>%
select(Ref_sta, D16, D50, D84)) %>%
left_join(y = pente %>%
select(Ref_sta, pente_eau))
View(tdbv_stations_aval_l93_20200612)
# convertir R64 bit -> R32 bit :  Tools-> Global Options-> Change R version-> choisir R 32 bit
rm(list = ls()) # nettoyage de l'espace
# chargement des packages
library(tidyverse)
library(RODBC)
# odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=../raw_data/Tête_BV.accdb")
# channel <- odbcConnect("TBV")
# channel
# Table1Dat <- sqlFetch(channel, "creationtable")
# connexion
channel <- odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
# importer les tables qui seront utilisées
station <- sqlFetch(channel, "Station")
caractere_bv <- sqlFetch(channel, "caractere_BV")
facies <- sqlFetch(channel, "Facies")
mesures_wolman <- sqlFetch(channel, "Mesures_Wolman")
pente <- sqlFetch(channel, "Pente")
prof_chute <- sqlFetch(channel, "Prof_chute")
rugosite <- sqlFetch(channel, "Rugosite")
tdbv_stations_aval_l93_20200612 <- sqlFetch(channel, "TDBV_stations_aval_L93_20200612")
rm(list = ls()) # nettoyage de l'espace
# chargement des packages
library(tidyverse)
library(RODBC)
# connexion
channel <- odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
install.packages("RODBC")
library(RODBC)
# connexion
channel <- odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
# connexion
channel <- odbcConnectAccess2007(access.file = "raw_data/Tête_BV.accdb")
# connexion
channel <- odbcConnectAccess2007(access.file = "../raw_data/Tête_BV.accdb")
remotes::install_gitlab("HYCAR-Hydro/hydroportail",
auth_token = "VK3hLxf3sUHhQVQPoxZ7",
host = "gitlab.irstea.fr",
dependencies = TRUE,
build_vignettes = TRUE,
force = TRUE)
library(hydroportail)
remotes::install_gitlab("olivier.delaigue/hydroportailstats",
auth_token = "65oy2WSu9EfpASW_oGTx",
host = "gitlab.irstea.fr",
dependencies = FALSE,
force = TRUE)
library(hydroportailStats)
stat_flow <- get_stats_hydro(code = "Y430651001", stat = "QMNA")
View(stat_flow)
stat_flow$tabs$parameters
vignette("get_started", package = "hydroportail")
data(sf_hydro_regions_met)
plot(sf_hydro_regions_met[, "CdRegionHy"], key.pos = NULL, main = NULL)
View(sf_hydro_regions_met)
?odbcConnectAccess2007
getwd()
# connexion
channel <- RODBC::odbcConnectAccess2007(access.file = "raw_data/Tête_BV.accdb")
# convertir R64 bit -> R32 bit :  Tools-> Global Options-> Change R version-> choisir R 32 bit
rm(list = ls()) # nettoyage de l'espace
# chargement des packages
library(tidyverse)
library(RODBC)
# odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=../raw_data/Tête_BV.accdb")
# channel <- odbcConnect("TBV")
# channel
# Table1Dat <- sqlFetch(channel, "creationtable")
# connexion
channel <- RODBC::odbcConnectAccess2007(access.file = "raw_data/Tête_BV.accdb")
# importer les tables qui seront utilisées
station <- sqlFetch(channel, "Station")
caractere_bv <- sqlFetch(channel, "caractere_BV")
facies <- sqlFetch(channel, "Facies")
mesures_wolman <- sqlFetch(channel, "Mesures_Wolman")
pente <- sqlFetch(channel, "Pente")
prof_chute <- sqlFetch(channel, "Prof_chute")
rugosite <- sqlFetch(channel, "Rugosite")
tdbv_stations_aval_l93_20200612 <- sqlFetch(channel, "TDBV_stations_aval_L93_20200612")
rm(list = ls()) # nettoyage de l'espace
# chargement des packages
library(tidyverse)
library(RODBC)
# odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=../raw_data/Tête_BV.accdb")
# channel <- odbcConnect("TBV")
# channel
# Table1Dat <- sqlFetch(channel, "creationtable")
# connexion
channel <- RODBC::odbcConnectAccess2007(access.file = "raw_data/Tête_BV.accdb")
